==Overview==
"To analyze how financial commitments affect the economy it is necessary to look at economic units in terms of their
cash flows. The cash-flow approach looks at all units -- be they households, corporations, state and municipal
governments, or even national governments -- as if they were banks."

The above quotation is taken from Hyman Minsky's magnum opus ''Stabilizing an Unstable Economy''.  Following Minsky,
and more recently Perry Mehrling, we view every economic actor as an entity that is both receiving certain cash flow
events (i.e., receipts of various kinds) as well as generating cash flow events (i.e., expenditures of various kinds)
over time.

The accumulation of cash flow events for a particular economic actor is captured by its balance sheet. The most basic
constraint that economic actors face in our framework is, to again borrow from Minsky, the survival constraint: the
inflow of cash flow events must be at least as big as the outflow of generated cash flow events.  By taking the
"banking perspective" our primary concern is the liquidity of economic actors; solvency of economic actors is a
secondary concern.

Our API consists of several different layers each of which is represented by
its own package.

===`acl` package===
A [[acl.PromiseMakingActor PromiseMakingActor]] actor communicates with other
[[acl.PromiseMakingActor PromiseMakingActor]] actors by making promises which are then either
accepted or rejected by the receiving [[acl.PromiseMakingActor PromiseMakingActor]] actors. The
[[acl]] package defines the [[acl.PromiseMakingActor PromiseMakingActor]] trait as well as the
high-level [[acl.PromiseMakingActor PromiseMakingActor]] communication language.

Our high-level [[acl.PromiseMakingActor PromiseMakingActor]] actor communication language is
influenced by, but not slave to, the [[http://www.fipa.org/ Foundation for Intelligent Physical
Agents (FIPA)]] compliant [[http://www.fipa.org/specs/fipa00037/SC00037J.pdf Agent Communication
Language (ACL)]].

===`edsl` package===
The [[edsl]] package defines the low-level embedded domain specific language (DSL) that we use
for constructing composable commercial contracts. Instead of defining a fixed catalogue of
contracts our approach is to follow...

 - [[https://lexifi.com/files/resources/MLFiPaper.pdf Peyton-Jones et al (2000)]]
 - [[http://www.itu.dk/~elsborg/sttt06.pdf Andersen et al (2006)]]

...and instead define a small set of atomic contracts, called [[edsl.commitments commitments]],
that can be used as "building blocks" to construct ever more complex contracts.

===`actors` package===
